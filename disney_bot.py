import telebot
import os
import pandas as pd
import numpy as np
from nltk.stem.snowball import SnowballStemmer
from sklearn.feature_extraction.text import HashingVectorizer
from sklearn.linear_model import SGDClassifier
from sklearn.metrics import accuracy_score
from joblib import dump, load
import nltk
from nltk.corpus import stopwords
from nltk import word_tokenize

sw = stopwords.words('russian')
stemmer = SnowballStemmer('russian')


def custom_tokenizer(text):
    return [stemmer.stem(w) for w in word_tokenize(text.lower(), language='russian') if w.isalpha() and not w in sw]


vectorizer = load('vectorizer.joblib')
clf = load('clf.joblib')


def answer(text):
  a = clf.predict(vectorizer.transform([text])).tolist()[0]
  if a == "PRINCESS":
    return "You are a princess!"
  elif a == "PRINCE":
    return "You are a prince."
  else:
    return "You are a side character:("


""" –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞ """

TOKEN = os.getenv('TOKEN')
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–≥–∞–¥—ã–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–∏—Å–Ω–µ–µ–≤—Å–∫–∏—Ö "
                     "–º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–ø–ª–∏–∫–∞–º ü¶Ñüåü\n–í–≤–µ–¥–∏ —Ä–µ–ø–ª–∏–∫—É!")


@bot.message_handler(func=lambda m: True)
def send_result(message):
    bot.send_message(answer(message.chat.id))


if __name__ == '__main__':
    bot.polling(none_stop=True)
